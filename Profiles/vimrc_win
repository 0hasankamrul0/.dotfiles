"Setup Vim in Window -----------------------------------------------------
" Execute below command in Adminstrative Priviledge Mode:
" Invoke-WebRequest -UseBasicParsing -Uri "https://raw.githubusercontent.com/0kamrulhasan0/.dotfiles/main/Themes/molokai.vim" -OutFile $HOME/vimfiles/colors/molokai.vim
" Invoke-WebRequest -UseBasicParsing -Uri "https://raw.githubusercontent.com/0kamrulhasan0/.dotfiles/main/Themes/gruvbox.vim" -OutFile $HOME/vimfiles/colors/gruvbox.vim
" rm 'C:\Program Fil-UseBasicParsing es (x86)\Vim\_vimrc'
" Invoke-WebRequest -UseBasicParsing -Uri "https://raw.githubusercontent.com/0kamrulhasan0/.dotfiles/main/Profiles/vimrc_win" -OutFile 'C:\Program Files (x86)\Vim\_vimrc'

" Vim with all enhancements
source $VIMRUNTIME/vimrc_example.vim

" Remap a few keys for Windows behavior
source $VIMRUNTIME/mswin.vim

" Mouse behavior (the Windows way)
behave mswin

" Use the internal diff if available.
" Otherwise use the special 'diffexpr' for Windows.
if &diffopt !~# 'internal'
  set diffexpr=MyDiff()
endif
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg1 = substitute(arg1, '!', '\!', 'g')
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg2 = substitute(arg2, '!', '\!', 'g')
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let arg3 = substitute(arg3, '!', '\!', 'g')
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      if empty(&shellxquote)
        let l:shxq_sav = ''
        set shellxquote&
      endif
      let cmd = '"' . $VIMRUNTIME . '\diff"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  let cmd = substitute(cmd, '!', '\!', 'g')
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  if exists('l:shxq_sav')
    let &shellxquote=l:shxq_sav
  endif
endfunction

set shell=C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe

if has("gui_running")
  set guifont=Consolas:h13:cDEFAULT
  set guioptions-=r
  set guioptions-=L
  set guioptions-=T
  set lines=25 columns=120
endif

set spelllang=en_us
set nospell
set enc=utf-8 
set autoread
set history=2000
set path+=**
set wildmenu
set nobackup
set noswapfile
set noundofile
set cursorline
set relativenumber
nnoremap <F2> :set relativenumber!<CR>
nnoremap <F3> :setlocal spell! <CR>
set pastetoggle=<F4>
set clipboard=unnamed

set smartindent
set tabstop=2
set shiftwidth=2
set expandtab
set hidden
set incsearch
set mouse+=a
set foldmethod=indent
set foldlevel=99
set showmode
set autowrite
set showmatch
set matchpairs+=<:>

set t_Co=256
set laststatus=2
set backspace=indent,eol,start
set splitbelow
set splitright

set shortmess+=I
set noerrorbells visualbell t_vb=
" Default - elflord or koehler
" Custom  - molokai or gruvbox
silent! colorscheme elflord
silent! colorscheme gruvbox
syntax on

" Save
let mapleader=" "
noremap <leader>f :w <CR>
noremap <leader>d :q! <CR>
nnoremap <leader> <C-W>
autocmd filetype python nnoremap <leader>e :w <bar> exec '!cls; python3 %'<CR>
autocmd filetype javascript nnoremap <leader>e :w <bar> exec '!cls; node %'<CR>
autocmd filetype java nnoremap <leader>e :w <bar> exec '!cls; java %'<CR>
"Scrolling
nnoremap K <C-U>
nnoremap J <C-D>
vnoremap L $
vnoremap H 0
nnoremap L $
nnoremap H 0
" Windows Movement 
" :tabn               new tab
" :tabe               edit tab
" :tabc               close new tab
" gt                  next tab
" gT                  previous tab

"Sessions
nnoremap <leader>mk :mksession! ~/.vim_session<CR> "Save Sessions
nnoremap <leader>ls :source ~/.vim_session<CR> "Save Sessions
nnoremap <leader>jq :%!jq '.'<CR>


"NERDTree like View
let g:netrw_list_hide = '^\.\.\=/\=$,.DS_Store,.idea,.git,__pycache__,venv,node_modules,*\.o,*\.pyc,.*\.swp'
let g:netrw_hide = 1
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 20
nnoremap <C-n> :Lex<CR>

" Disabling Arrow Keys to Avoid Using Them 
no <up> <Nop>
no <down> <Nop>
no <right> <Nop>
no <left> <Nop>
ino <up> <Nop>
ino <down> <Nop>
ino <right> <Nop>
ino <left> <Nop>
vno <up> <Nop>
vno <down> <Nop>
vno <right> <Nop>
vno <left> <Nop>

"Flagging Unnecessary Whitespace
highlight BadWhitespace ctermbg=red guibg=darkred
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/
